::
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix = [
	...	[2, 4, 6],
	...	[8, 10, 12]
	... ]
	>>> print(matrix_divided(matrix, 2))
	[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

::
	>>> matrix = [
	...	[1, 2, 3],
	...	[4, 5, 6]
	... ]
	>>> print(matrix_divided(matrix, 3))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

::
	>>> print(matrix)
	[[1, 2, 3], [4, 5, 6]]

::
	>>> matrix = [
	...	[-1, 2.2, 3, -4.4, 5],
	...	[-6.6, 7.00, -8, 9.999, 10]
	... ]
	>>> print(matrix_divided(matrix, 3))
	[[-0.33, 0.73, 1.0, -1.47, 1.67], [-2.2, 2.33, -2.67, 3.33, 3.33]]

::
	>>> matrix = "not an array"
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::
	>>> matrix = []
	>>> print(matrix_divided(matrix, 5))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::
	>>> matrix = None
	>>> (matrix_divided(matrix, 5))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::
	>>> matrix = [[]]
	>>> print(matrix_divided(matrix, 3))
	[[]]

::
	>>> matrix = [1, 2, 3]
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::
	>>> matrix = [
	...	[11, 2, 23],
	...	[4, "not divisable", 16]
	... ]
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::
	>>> matrix = [
	...	[1, 2, 3],
	...	[4, 5, 6]
	... ]
	>>> print(matrix_divided(matrix, "not divisable"))
	Traceback (most recent call last):
	TypeError: div must be a number

::
	>>> print(matrix_divided(matrix, 0))
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

::
	>>> print(matrix_divided(matrix, None))
	Traceback (most recent call last):
	TypeError: div must be a number
